import 'jest'
import minifaker, { CountryCodeType, DirectionType, Gender, WordType } from '../src'
import '../src/locales/en'

test('Test locale en', () => {
  expect(minifaker.phoneNumber())
  expect(minifaker.firstName())
  expect(minifaker.firstName({ gender: Gender.FEMALE }))
  expect(minifaker.firstName({ gender: Gender.MALE }))
  expect(minifaker.cityName())
  expect(minifaker.cityPrefix())
  expect(minifaker.citySuffix())
  expect(() => minifaker.city()).toThrow()
  expect(minifaker.lastName())
  expect(minifaker.name())
  expect(minifaker.jobTitle())
  expect(minifaker.jobArea())
  expect(minifaker.jobDescriptor())
  expect(minifaker.jobType())
  expect(minifaker.word())
  expect(minifaker.word({ filter: (word) => word.length > 5 }))
  expect(minifaker.word({ type: WordType.NOUN }))
  expect(minifaker.username())
  expect(minifaker.username({ type: 0 }))
  expect(minifaker.username({ type: 1 }))
  expect(minifaker.username({ type: 2 }))
  expect(minifaker.domainSuffix())
  expect(minifaker.domainName())
  expect(minifaker.email())
  expect(minifaker.email({ firstName: 'alice' }))
  expect(minifaker.email({ firstName: 'james', lastName: 'bond' }))
  expect(minifaker.email({ provider: 'pm.me' }))
  expect(minifaker.domainUrl())
  expect(minifaker.zipCode())
  expect(minifaker.streetSuffix())
  expect(minifaker.streetName())
  expect(minifaker.streetAddress())
  expect(minifaker.timeZone())
  expect(minifaker.direction())
  expect(minifaker.direction({ useAbbr: true }))
  expect(minifaker.direction({ type: DirectionType.CARDINAL }))
  expect(minifaker.state())
  expect(minifaker.state({ useAbbr: true }))
  expect(minifaker.country())
  expect(minifaker.country({ useCode: CountryCodeType.Alpha2 }))
  expect(minifaker.country({ useCode: CountryCodeType.Alpha3 }))
  expect(minifaker.price())
  expect(minifaker.price({ min: 500, max: 50000 }))
  expect(minifaker.month())
  expect(minifaker.weekday())
  expect(minifaker.month({ useAbbr: true }))
  expect(minifaker.weekday({ useAbbr: true }))
})
